name: Auto Label PR

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Auto Label PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;

            if (!pr) {
              console.log("No pull request data found.");
              return;
            }

            const prTitle = pr.title ? pr.title.toLowerCase() : "";
            const branchName = pr.head && pr.head.ref ? pr.head.ref.toLowerCase() : "";

            console.log("PR Title:", prTitle || "No title provided");
            console.log("Branch Name:", branchName || "No branch name provided");

            // Obtener archivos modificados
            try {
              const changedFiles = await github.rest.pulls.listFiles({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
              });

              console.log("Changed Files:", changedFiles.data);

              const labelsToAdd = [];

              // Etiquetar según palabras clave en el título de la PR
              if (prTitle.includes("bug")) {
                labelsToAdd.push("bug");
              }
              if (prTitle.includes("feature")) {
                labelsToAdd.push("enhancement");
              }

              // Etiquetar según el nombre de la rama
              if (branchName.includes("task")) {
                labelsToAdd.push("task");
              }
              if (branchName.includes("incidence")) {
                labelsToAdd.push("incidence");
              }

              // Etiquetar según los archivos modificados
              const fileExtensions = changedFiles.data.map(file => file.filename.split('.').pop());
              if (fileExtensions.some(ext => ["html", "js", "css"].includes(ext))) {
                labelsToAdd.push("frontend");
              }
              if (fileExtensions.some(ext => ["py", "java", "rb"].includes(ext))) {
                labelsToAdd.push("backend");
              }

              console.log("Labels to Add:", labelsToAdd);

              // Aplicar las etiquetas si hay alguna para añadir
              if (labelsToAdd.length > 0) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  labels: labelsToAdd,
                });
              }
            } catch (error) {
              console.error("Error fetching changed files:", error);
            }